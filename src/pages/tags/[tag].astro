---
import { getCollection } from "astro:content";
import LabelTag from "@/components/ui/tags/label-tag";
import PostStack from "@/components/ui/post-stack";
import BaseLayout from "@/layouts/base-layout.astro";
import { defaultLang, useTranslations } from "@/utils/i18n";
import { getSnapshots, getUniqueLowerCaseTagMap } from "@/utils/post";

export const getStaticPaths = async () => {
  const posts = await getCollection("posts");
  const tags = getUniqueLowerCaseTagMap(
    posts.flatMap((post) => post.data.tags),
  );
  return Array.from(tags.keys()).map((tag) => ({ params: { tag } }));
};

const { tag } = Astro.params;
const filteredPosts = await getCollection("posts", (post) =>
  getUniqueLowerCaseTagMap(post.data.tags).get(tag),
);
const filteredSnapshots = await getSnapshots(filteredPosts, defaultLang);
const t = useTranslations(defaultLang);
---

<BaseLayout
  title={`${t("postsWithTag.firstPart")} "${tag}" ${t("postsWithTag.secondPart")}`}
  description={`${t("postsWithTag.description.firstPart")} "${tag}" ${t("postsWithTag.description.secondPart")}`}
  headerAsH1={false}
>
  <article>
    <h1
      class="text-4xl font-black text-dracula-light mb-10 mx-auto leading-loose"
    >
      {t("postsWithTag.firstPart")}
      <LabelTag lang={defaultLang} label={tag} large />
      {t("postsWithTag.secondPart")}
    </h1>

    <PostStack
      lang={defaultLang}
      initialSnapshots={filteredSnapshots}
      totalPostCount={filteredSnapshots.length}
      searchInInitialSnapshots={true}
      client:load
    />
  </article>
</BaseLayout>
